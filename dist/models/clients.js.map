{"version":3,"sources":["../../server/models/clients.js"],"names":["mongoose","require","Schema","ClientSchema","first_name","type","String","required","last_name","nick_name","description","tax_id","tax_type","tax_code","requied","unique","emails","email","verified","Boolean","default","addresses","contact","street","city","province","zip","phones","phoneType","prefix","number","subfix","memo","payment_cards","card_name","index","trim","card_number","expiry_date","Date","timestamps","autoIndex","module","exports","model"],"mappings":";;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;IACQC,M,GAAWF,Q,CAAXE,M;;;AAER,IAAMC,eAAe,IAAID,MAAJ,CAAW;AAC5BE,gBAAY,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADgB;AAE5BC,eAAW,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAFiB;AAG5BE,eAAW,EAAEJ,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAAiCG,aAAa,2CAA9C,EAHiB;;AAK5BC,YAAQ;AACJC,kBAAU,EAAEP,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADN;AAEJM,kBAAU,EAAER,MAAMC,MAAR,EAAgBQ,SAAS,IAAzB,EAA+BC,QAAQ,IAAvC;AAFN,KALoB;;AAU5BC,YAAQ,CAAC;AACLC,eAAO,EAACZ,MAAMC,MAAP,EAAeC,UAAU,KAAzB,EADF;AAELW,kBAAU,EAAEb,MAAMc,OAAR,EAAiBZ,UAAU,KAA3B,EAAkCa,SAAS,KAA3C,EAFL;;AAILb,kBAAU;AAJL,KAAD,CAVoB;;AAiB5Bc,eAAW,CAAC;AACRC,iBAAS,EAACjB,MAAMC,MAAP,EAAeC,UAAU,KAAzB,EAAgCG,aAAa,mCAA7C,EADD;AAERa,gBAAQ,EAAElB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAFA;AAGRiB,cAAM,EAAEnB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAHE;AAIRkB,kBAAU,EAAEpB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAJF;AAKRmB,aAAK,EAAErB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EALG;;AAORA,kBAAU;AAPF,KAAD,CAjBiB;AA0B5BoB,YAAQ,CAAC;AACLC,mBAAW,EAAEvB,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EADN;AAELsB,gBAAQ,EAAExB,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAFH;AAGLuB,gBAAQ,EAAEzB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAHH;AAILwB,gBAAQ,EAAE1B,MAAMC,MAAR,EAAgBQ,SAAS,KAAzB,EAJH;AAKLkB,cAAM,EAAE3B,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAAiCG,aAAa,4BAA9C,EALD;;AAOLH,kBAAU;AAPL,KAAD,CA1BoB;AAmC5B0B,mBAAe,CAAC;AACZC,mBAAW,EAAE7B,MAAMC,MAAR,EAAgBQ,SAAS,IAAzB,EAA+BqB,OAAO,IAAtC,EAA4CC,MAAM,IAAlD,EADC;AAEZC,qBAAa,EAAEhC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAAgC4B,OAAO,IAAvC,EAA6CC,MAAM,IAAnD,EAFD;AAGZE,qBAAa,EAAEjC,MAAMkC,IAAR,EAAczB,SAAS,IAAvB,EAA6BsB,MAAM,IAAnC,EAHD;AAIZV,aAAK,EAAErB,MAAMC,MAAR,EAAgB8B,MAAM,IAAtB,EAA4B7B,UAAU,KAAtC,EAJO;;AAMZO,iBAAS;AANG,KAAD;AAnCa,CAAX,EA2CnB,EAAC0B,YAAY,IAAb,EAAmBC,WAAU,IAA7B,EA3CmB,CAArB;;AA6CAtC,aAAagC,KAAb;;AAEAO,OAAOC,OAAP,GAAiB3C,SAAS4C,KAAT,CAAe,WAAf,EAA4BzC,YAA5B,CAAjB","file":"clients.js","sourcesContent":["\r\n\r\nconst mongoose = require('mongoose');\r\nconst { Schema } = mongoose;\r\n\r\nconst ClientSchema = new Schema({\r\n    first_name: { type: String, required: true },\r\n    last_name: { type: String, required: false },\r\n    nick_name: { type: String, required: false, description: \"too known as... as trade marks, and other\"},\r\n    \r\n    tax_id: {\r\n        tax_type: { type: String, required: true },\r\n        tax_code: { type: String, requied: true, unique: true },\r\n    },\r\n    \r\n    emails: [{\r\n        email: {type: String, required: false},\r\n        verified: { type: Boolean, required: false, default: false },\r\n        \r\n        required: false\r\n    }],\r\n    \r\n    addresses: [{\r\n        contact: {type: String, required: false, description: \"use if client is not your contact\"},\r\n        street: { type: String, required: true },\r\n        city: { type: String, required: true },\r\n        province: { type: String, required: true },\r\n        zip: { type: String, required: true },\r\n        \r\n        required: false\r\n    }],\r\n    phones: [{\r\n        phoneType: { type: String, required: false },\r\n        prefix: { type: String, required: false},\r\n        number: { type: String, required: true },\r\n        subfix: { type: String, requied: false},\r\n        memo: { type: String, required: false, description: \"use if you need other data\" },\r\n        \r\n        required: false\r\n    }],\r\n    payment_cards: [{\r\n        card_name: { type: String, requied: true, index: true, trim: true},\r\n        card_number: { type: String, required: true, index: true, trim: true},\r\n        expiry_date: { type: Date, requied: true, trim: true},\r\n        zip: { type: String, trim: true, required: false},\r\n    \r\n        requied: false\r\n    }]\r\n},{timestamps: true, autoIndex:true});\r\n\r\nClientSchema.index\r\n\r\nmodule.exports = mongoose.model('customers', ClientSchema);\r\n\r\n\r\n\r\n"]}