{"version":3,"sources":["../../server/controllers/card.controller.js"],"names":["cardController","addToCard","req","res","next","errors","myValidationResult","array","length","status","json","body","userId","productid","Product","findOne","err","data","Card","product","save","error","favoriteproduct","success","message","getCard","id","params","favoriteProduct","find","removeCardProduct","query","remove","_id","obj","console","log","result","n","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,EAAvB;;AAEAA,eAAeC,SAAf,GAAyB,gBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAAyB;AAC9C,MAAI;AACF,QAAMC,SAASC,mBAAmBJ,GAAnB,EAAwBK,KAAxB,EAAf,CADE,CAC8C;;AAEhD,QAAIF,OAAOG,MAAP,GAAc,CAAlB,EAAqB;AACnBL,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEL,QAAQA,MAAV,EAArB;AACA;AACD;;AANC,oBAQuBH,IAAIS,IAR3B;AAAA,QAQKC,MARL,aAQKA,MARL;AAAA,QAQYC,SARZ,aAQYA,SARZ;;;AAUFC,uBAAQC,OAAR,CAAgB,EAAEF,oBAAF,EAAhB,EAA+B,gBAAOG,GAAP,EAAYC,IAAZ,EAAoB;AACjD,UAAID,GAAJ,EAAS;AACPb,YAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEL,QAAQF,GAAV,EAArB;AACA;AACD;AACD,UAAIc,IAAJ,EAAU;AACR,YAAMC,QAAO,IAAIA,KAAJ,CAAS,EAACN,cAAD,EAAQO,SAAQF,IAAhB,EAAT,CAAb;;AAEJ,cAAMC,MAAKE,IAAL,CAAU,eAAO;AACrB,cAAIJ,GAAJ,EAAS;AACPb,gBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEW,OAAOL,GAAT,EAArB;AACD,WAFD,MAEO;AACLb,gBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBa,gCAAjB,EAArB;AACD;AACF,SANK,CAAN;AAOG,OAVD,MAUO;AACLnB,YAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACa,SAAQ,KAAT,EAAeC,SAAQ,6BAAvB,EAArB;AACD;AACF,KAlBD;AAmBD,GA7BD,CA6BE,OAAOR,GAAP,EAAY;AACZb,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEW,OAAOL,GAAT,EAArB;AACD;AACF,CAjCH;;AAmCAhB,eAAeyB,OAAf,GAAuB,gBAAOvB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAAyB;;AAE5C,MAAMsB,KAAGxB,IAAIyB,MAAJ,CAAWD,EAApB;;AAEAE,kBAAgBC,IAAhB,CAAqB,EAAEjB,QAAOc,EAAT,EAArB,EAAoC,UAASV,GAAT,EAAcC,IAAd,EAAoB;AACtD,QAAID,GAAJ,EAAS;AACPb,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEL,QAAQF,GAAV,EAArB;AACA;AACD;AACD,QAAIc,IAAJ,EAAU;AACRd,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACa,SAAQ,IAAT,EAAcC,SAAQ,4CAAtB,EAAmEL,SAAQF,IAA3E,EAArB;AACD,KAFD,MAEO;AACLd,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACa,SAAQ,KAAT,EAAeC,SAAQ,0BAAvB,EAArB;AACD;AACF,GAVD;AAYD,CAhBH;AAiBAxB,eAAe8B,iBAAf,GAAmC,gBAAO5B,GAAP,EAAYC,GAAZ,EAAoB;AAAA,mBAC1BD,IAAI6B,KADsB;AAAA,MAC/ClB,SAD+C,cAC/CA,SAD+C;AAAA,MACrCD,MADqC,cACrCA,MADqC;;AAEvDE,qBACAkB,MADA,CACO,EAACC,KAAIrB,MAAL,EAAYO,SAAQ,EAACc,KAAIpB,SAAL,EAApB,EADP,EAC4C,UAASG,GAAT,EAAckB,GAAd,EAAmB;AAC3D,QAAIlB,GAAJ,EAAUb,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEW,OAAOL,GAAT,EAArB;AACVmB,YAAQC,GAAR,CAAYF,IAAIG,MAAJ,CAAWC,CAAX,GAAe,sBAA3B;AACH,GAJD;AAMC,CARD;;AAYAC,OAAOC,OAAP,GAAiBxC,cAAjB;;AAEA","file":"card.controller.js","sourcesContent":["import Card from \"../models/card\"\r\nimport Product from \"../models/products\"\r\n\r\nconst cardController = {};\r\n\r\ncardController.addToCard=async (req, res, next)=> {\r\n    try {\r\n      const errors = myValidationResult(req).array(); // Finds the validation errors in this request and wraps them in an object with handy functions\r\n  \r\n      if (errors.length>0) {\r\n        res.status(422).json({ errors: errors});\r\n        return;\r\n      }\r\n    \r\n      const {userId,productid}=req.body;\r\n      \r\n      Product.findOne({ productid }, async (err, data) =>{\r\n        if (err) {\r\n          res.status(422).json({ errors: res });\r\n          return;\r\n        }\r\n        if (data) {\r\n          const Card = new Card({userId,product:data});\r\n  \r\n      await Card.save(err => {\r\n        if (err) {\r\n          res.status(400).json({ error: err });\r\n        } else {\r\n          res.status(200).json({ status: \"200\", favoriteproduct });\r\n        }\r\n      });\r\n        } else {\r\n          res.status(400).json({success:false,message:\"This product doesn't exsist\"});\r\n        }\r\n      });\r\n    } catch (err) {\r\n      res.status(400).json({ error: err });\r\n    }\r\n  }\r\n  \r\ncardController.getCard=async (req, res, next)=> {\r\n  \r\n    const id=req.params.id;\r\n      \r\n    favoriteProduct.find({ userId:id }, function(err, data) {\r\n      if (err) {\r\n        res.status(422).json({ errors: res });\r\n        return;\r\n      }\r\n      if (data) {\r\n        res.status(200).json({success:true,message:\"There is the list of your Products in card\",product:data});\r\n      } else {\r\n        res.status(400).json({success:false,message:\"Sorry your card is empty\"});\r\n      }\r\n    });\r\n    \r\n  }\r\ncardController.removeCardProduct = async (req, res) => {\r\nconst { productid,userId } = req.query;\r\nProduct.\r\nremove({_id:userId,product:{_id:productid}},function(err, obj) {\r\n    if (err)  res.status(400).json({ error: err });\r\n    console.log(obj.result.n + \" document(s) deleted\");\r\n})\r\n\r\n};\r\n    \r\n  \r\n  \r\nmodule.exports = cardController;\r\n\r\n/** this ends this file\r\n* server/controllers/card.controller\r\n**/\r\n"]}