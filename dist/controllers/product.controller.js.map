{"version":3,"sources":["../../server/controllers/product.controller.js"],"names":["Product","require","productController","getProducts","req","res","products","find","json","getCount","count","countDocuments","createProduct","imagesUrl","files","length","map","filename","Date","now","file","originalname","containerUrl","BlockBlobURL","then","console","log","catch","error","push","url","body","images","product","save","err","status","editProduct","id","params","code","description","size","weight","price","discount","on_sale","active","stock","broken_stock","to_serve","to_receive","ubication","findByIdAndUpdate","$set","new","getActives","getInactives","getActivesCount","getInactivesCount","getProduct","findById","deleteProduct","findByIdAndRemove","activateProduct","update","_id","deactivateProduct","addImage","image","brokenStock","broken","$where","module","exports"],"mappings":"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","file":"product.controller.js","sourcesContent":["const Product = require(\"../models/products\");\nimport { containerUrlFrom, BlockBlobURLFrom, uploadStream } from \"../azure\";\nimport uuid from \"uuid-v4\";\nconst productController = {};\n\nproductController.getProducts = async (req, res) => {\n  // console.log('api/products/   ---getProducts');\n  const products = await Product.find();\n\n  res.json({ products });\n};\n\nproductController.getCount = async (req, res) => {\n  const count = await Product.countDocuments();\n\n  res.json(count);\n};\n\nproductController.createProduct = async (req, res) => {\n  let imagesUrl = [];\n  if (req.files.length) {\n    req.files.map(file => {\n      try {\n        let filename = `${Date.now()}-${uuid()}${file.originalname}`;\n        const containerUrl = containerUrlFrom();\n        const BlockBlobURL = BlockBlobURLFrom(containerUrl, filename);\n        uploadStream(BlockBlobURL, file)\n          .then(() => console.log(\"files uploaded to server\"))\n          .catch(error => console.log(`Error - ${error}`));\n        imagesUrl.push(BlockBlobURL.url);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    req.body.images=imagesUrl;\n  }\n\n  const product = new Product(req.body);\n\n  await product.save(err => {\n    if (err) {\n      res.json({ error: err });\n    } else {\n      res.json({ status: \"200\",imagesUrl});\n    }\n  });\n\n};\n\nproductController.editProduct = async (req, res) => {\n  const { id } = req.params;\n\n  const product = {\n    code: req.body.code,\n    description: req.body.description,\n    size: req.body.size,\n    weight: req.body.weight,\n    price: req.body.price,\n    discount: req.body.discount,\n    on_sale: req.body.on_sale,\n    active: req.body.active,\n    stock: req.body.stock,\n    broken_stock: req.body.broken_stock,\n    to_serve: req.body.to_serve,\n    to_receive: req.body.to_receive,\n    ubication: req.body.ubication,\n    images: req.body.images\n  };\n\n  await Product.findByIdAndUpdate(id, { $set: product }, { new: true });\n\n  res.json({ status: \"200\" });\n};\n\nproductController.getActives = async (req, res) => {\n  const products = await Product.find({ active: true });\n\n  res.json(products);\n};\n\nproductController.getInactives = async (req, res) => {\n  const products = await Product.find({ active: false });\n\n  res.json(products);\n};\n\nproductController.getActivesCount = async (req, res) => {\n  const products = await Product.find({ active: true }).countDocuments();\n\n  res.json(products);\n};\n\nproductController.getInactivesCount = async (req, res) => {\n  const products = await Product.find({ active: false }).countDocuments();\n\n  res.json(products);\n};\n\nproductController.getProduct = async (req, res) => {\n  const product = await Product.findById(req.params.id);\n\n  res.json(product);\n};\n\nproductController.deleteProduct = async (req, res) => {\n  const { id } = req.params;\n\n  await Product.findByIdAndRemove(id);\n\n  res.json({ status: \"200\" });\n};\n\nproductController.activateProduct = async (req, res) => {\n  console.log(req.params);\n  const { id } = req.params;\n\n  await Product.update({ _id: id }, { $set: { active: true } }, () => {\n    res.json({ status: \"200\" });\n  });\n};\n\nproductController.deactivateProduct = async (req, res) => {\n  console.log(req.params);\n  const { id } = req.params;\n\n  await Product.update({ _id: id }, { $set: { active: false } }, () => {\n    res.json({ status: \"200\" });\n  });\n};\n\nproductController.addImage = async (req, res) => {\n  const { id } = req.params;\n\n  const image = {\n    image: req.body.image\n  };\n  const product = await Product.findById(req.params.id);\n\n  product.images.push(image);\n  await product.save(err => {\n    if (err) {\n      res.json(err);\n    } else {\n      res.json({ status: \"200\" });\n    }\n  });\n};\n\nproductController.brokenStock = async (req, res) => {\n  const broken = await Product.find({\n    $where: \"this.broken_stock >= this.stock\"\n  });\n\n  res.json(broken);\n};\n\nmodule.exports = productController;\n\n/** this ends this file\n * server/controllers/product.controller\n **/\n"]}