{"version":3,"sources":["../../server/controllers/product.controller.js"],"names":["Product","require","productController","getCount","req","res","count","countDocuments","json","createProduct","errors","array","length","status","files","body","description","title","price","stock","imagesUrl","map","filename","Date","now","file","originalname","containerUrl","BlockBlobURL","then","console","log","catch","error","push","url","product","images","save","err","getProductsPagination","next","perPage","page","query","find","skip","limit","exec","products","current","pages","Math","ceil","editProduct","_id","params","code","size","weight","discount","on_sale","active","broken_stock","to_serve","to_receive","ubication","findByIdAndUpdate","id","$set","new","getActives","getInactives","getActivesCount","getInactivesCount","getProduct","findById","deleteProduct","findByIdAndRemove","activateProduct","update","deactivateProduct","addImage","image","brokenStock","broken","$where","module","exports"],"mappings":"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","file":"product.controller.js","sourcesContent":["const Product = require(\"../models/products\");\nimport { containerUrlFrom, BlockBlobURLFrom, uploadStream } from \"../azure\";\nimport {myValidationResult} from \"../utils/util\"\nimport uuid from \"uuid-v4\";\n\n\nconst productController = {};\n\n\n\n\n// productController.getProducts = async (req, res) => {\n//   // console.log('api/products/   ---getProducts');\n//   const products = await Product.find();\n\n//   res.json({ products });\n// };\n\nproductController.getCount = async (req, res) => {\n  const count = await Product.countDocuments();\n\n  res.json(count);\n};\n\nproductController.createProduct = async (req, res) => {\n  try {\n    const errors = myValidationResult(req).array(); // Finds the validation errors in this request and wraps them in an object with handy functions\n\n    if (errors.length>0) {\n      res.status(422).json({ errors: errors});\n      return;\n    }\n    const {files}=req;\n    const {description,title,price,stock}=req.body;\n    let imagesUrl = [];\n    if (files && files.length>0) {\n        files.map(file => {\n       \n          let filename = `${Date.now()}-${uuid()}${file.originalname}`;\n          const containerUrl = containerUrlFrom();\n          const BlockBlobURL = BlockBlobURLFrom(containerUrl, filename);\n          uploadStream(BlockBlobURL, file)\n            .then(() => console.log(\"files uploaded to server\"))\n            .catch(error => console.log(`Error - ${error}`));\n          imagesUrl.push(BlockBlobURL.url);\n        \n      });\n    \n    }\n\n    const product = new Product({description,title,price,stock,images:imagesUrl});\n\n    await product.save(err => {\n      if (err) {\n        res.json({ error: err });\n      } else {\n        res.json({ status: \"200\", product });\n      }\n    });\n  } catch (err) {\n    res.json({ error: err });\n  }\n};\n\nproductController.getProductsPagination=async (req, res, next)=> {\n  var perPage = 10\n  var page = req.query.page || 1\n\n  Product\n      .find({})\n      .skip((perPage * page) - perPage)\n      .limit(perPage)\n      .exec((err, products) =>{\n        if (err) return next(err)\n          Product.count().exec((err, count)=> {\n              if (err) return next(err)\n              res.json({\n                  products: products,\n                  current: page,\n                  pages: Math.ceil(count / perPage)\n              })\n          })\n      })\n}\n//Todo-- implement it correclty\nproductController.editProduct = async (req, res) => {\n  const { _id} = req.params;\n   \n  const product = {\n    code: req.body.code,\n    description: req.body.description,\n    size: req.body.size,\n    weight: req.body.weight,\n    price: req.body.price,\n    discount: req.body.discount,\n    on_sale: req.body.on_sale,\n    active: req.body.active,\n    stock: req.body.stock,\n    broken_stock: req.body.broken_stock,\n    to_serve: req.body.to_serve,\n    to_receive: req.body.to_receive,\n    ubication: req.body.ubication,\n    images: req.body.images\n  };\n\n  await Product.findByIdAndUpdate(id, { $set: product }, { new: true });\n\n  res.json({ status: \"200\" });\n};\n\nproductController.getActives = async (req, res) => {\n  const products = await Product.find({ active: true });\n\n  res.json(products);\n};\n\nproductController.getInactives = async (req, res) => {\n  const products = await Product.find({ active: false });\n\n  res.json(products);\n};\n\nproductController.getActivesCount = async (req, res) => {\n  const products = await Product.find({ active: true }).countDocuments();\n\n  res.json(products);\n};\n\nproductController.getInactivesCount = async (req, res) => {\n  const products = await Product.find({ active: false }).countDocuments();\n\n  res.json(products);\n};\n\nproductController.getProduct = async (req, res) => {\n  const product = await Product.findById(req.params._id);\n\n  res.json(product);\n};\n\nproductController.deleteProduct = async (req, res) => {\n  const { id } = req.params;\n\n  await Product.findByIdAndRemove(id);\n\n  res.json({ status: \"200\" });\n};\n\nproductController.activateProduct = async (req, res) => {\n  console.log(req.params);\n  const { id } = req.params;\n\n  await Product.update({ _id: id }, { $set: { active: true } }, () => {\n    res.json({ status: \"200\" });\n  });\n};\n\nproductController.deactivateProduct = async (req, res) => {\n  console.log(req.params);\n  const { id } = req.params;\n\n  await Product.update({ _id: id }, { $set: { active: false } }, () => {\n    res.json({ status: \"200\" });\n  });\n};\n\nproductController.addImage = async (req, res) => {\n  const { _id } = req.params;\n\n  const image = {\n    image: req.body.image\n  };\n  const product = await Product.findById(_id);\n\n  product.images.push(image);\n  await product.save(err => {\n    if (err) {\n      res.json(err);\n    } else {\n      res.json({ status: \"200\" });\n    }\n  });\n};\n\nproductController.brokenStock = async (req, res) => {\n  const broken = await Product.find({\n    $where: \"this.broken_stock >= this.stock\"\n  });\n\n  res.json(broken);\n};\n\nmodule.exports = productController;\n\n/** this ends this file\n * server/controllers/product.controller\n **/\n"]}