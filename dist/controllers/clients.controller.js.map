{"version":3,"sources":["../../server/controllers/clients.controller.js"],"names":["clientsController","Clients","require","getClients","req","res","clients","find","json","createClient","client","body","save","err","editClientSimpleData","id","params","cliente","findById","first_name","last_name","nick_name","tax_id","tax_type","tax_code","emails","addresses","phones","then","editEmailsData","email","findOneAndUpdate","catch","console","log","e","editAddressData","address","editPhonesData","phone","pushEmails","newEmails","push","pushAddresses","newAddresses","pushPhones","newPhones","deleteEmails","update","_id","$pull","safe","deleteAddresses","response","deletePhones","deleteClient","findByIdAndRemove","getClient","pushPaymentCard","payment_card","payment_cards","editPaymentCard","idcard","deletePaymentCard","module","exports"],"mappings":"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","file":"clients.controller.js","sourcesContent":["\n\nconst clientsController = {};\nconst Clients = require('../models/clients');;\n\nclientsController.getClients = async (req, res) => {\n    const clients = await Clients.find();\n\n    res.json(clients);\n};\n\nclientsController.createClient = async (req, res) => {\n    const client = new Clients(req.body);\n\n    await client.save(err => {\n        if (err) {\n            res.json({ \"error\": err });\n        }\n        else {\n            res.json({ \"status\": \"200\" });\n        }\n    });\n};\n\nclientsController.editClientSimpleData = async (req, res) => {\n    const { id } = req.params;\n    \n    let cliente = await Clients.findById(id);\n\n\n   cliente.first_name = req.body.first_name;\n   cliente.last_name = req.body.last_name;\n   cliente.nick_name = req.body.nick_name;\n   cliente.tax_id.tax_type = req.body.tax_id.tax_type;\n   cliente.tax_id.tax_code = req.body.tax_id.tax_code;\n   cliente.emails = cliente.emails;\n   cliente.addresses = cliente.addresses;\n   cliente.phones = cliente.phones;\n\n    await cliente.save()\n        .then( () => {\n            res.json({ \"status\": \"200\"});\n        } );\n\n};\n\nclientsController.editEmailsData = async (req, res) => {\n    /*\n        model for req: \n            {\n                \"verified\": false,\n                \"email\": \"correo@pedroruizhidalgo.es\"\n            }\n    */\n    const { id } = req.params;\n    const { email }  = req.params;\n   \n    await Clients.findOneAndUpdate(\n        {\"_id\": id, \"emails._id\": email},\n        { '$set': {\n            'emails.$': req.body\n        }})\n            .then( doc => {\n                res.json({\"status\": \"200\"});\n            })\n            .catch( e => {\n                console.log(e);\n            });\n};\n\nclientsController.editAddressData = async (req, res) => {\n\n    /*\n        model for req: \n        {\n            \"contact\": \"contact\", no required\n            \"street\": \"street\", required\n            \"city\": \"city\", required\n            \"province\": \"province\", required\n            \"zip\": \"zip\", required\n        }\n    */\n\n    const { id } = req.params;\n    const { address } = req.params;\n\n    await Clients.findOneAndUpdate(\n        {\"_id\": id, \"addresses._id\": address},\n        { \"$set\": { \"addresses.$\" : req.body } }\n    )\n        .then(doc => {\n            res.json({ \"status\": \"200\" });\n        })\n        .catch(e => {\n            console.log(e);\n        });\n};\n\nclientsController.editPhonesData = async (req, res) => {\n    /*\n        model for phones\n    {\n        phoneType: { type: String, required: false },\n        prefix: { type: String, required: false},\n        number: { type: String, required: true },\n        subfix: { type: String, requied: false},\n        memo: { type: String, required: false, description: \"use if you need other data\" },\n\n        required: false\n    }\n    */\n\n    const { id } = req.params;\n    const { phone } = req.params;\n\n    await Clients.findOneAndUpdate(\n        { \"_id\": id, \"phones._id\": phone },\n        { \"$set\": { \"phones.$\": req.body } }\n    )\n        .then(doc => {\n            res.json({ \"status\": \"200\" });\n        })\n        .catch(e => {\n            console.log(e);\n        });\n\n};\n\nclientsController.pushEmails = async (req, res) => {\n    const newEmails = req.body;\n    const { id } = req.params;\n\n\n    await Clients.findById(id)\n        .then ( (client) => {\n            client.emails.push(newEmails);\n            client.save();\n        }).catch ( (e) => {\n            console.log(e);\n        }).then (\n            res.json({\"status\":\"200\"})\n        );\n    \n};\n\nclientsController.pushAddresses = async (req, res) => {\n    const newAddresses = req.body;\n    const { id } = req.params;\n\n    await Clients.findById(id)\n        .then( (client) => {\n            client.addresses.push(newAddresses);\n            client.save();\n        }).catch( e => console.log(e)).then(\n            res.json({\"status\":\"200\"})\n        );\n};\n\nclientsController.pushPhones = async (req, res) => {\n    const newPhones = req.body;\n    const { id } = req.params;\n\n    await Clients.findById(id)\n        .then((client) => {\n            client.phones.push(newPhones);\n            client.save();\n        }).catch(e => console.log(e)).then(\n            res.json({ \"status\": \"200\" })\n        );\n};\n\nclientsController.deleteEmails = async (req, res) => {\n    const { email } = req.params;\n    const { id } = req.params;\n\n    await Clients.update(\n        {_id: id},\n        { $pull: {emails: {_id: email} } },\n        { safe: true}\n    )\n        .then( (client) => {\n            console.log(client);\n        })\n        .catch( e => console.log(e))\n        .then( () => {\n            res.json({\"status\": \"200\"});\n        })\n};\n\nclientsController.deleteAddresses = async (req, res) => {\n    const { address } = req.params;\n    const { id } = req.params;\n\n    await Clients.update(\n        {_id: id},\n        { $pull: {addresses: {_id: address} } },\n        {safe: true}\n    )\n        .then( ( response ) => {\n            console.log(client);\n        })\n        .catch( e => console.log(e))\n        .then( () => {\n            res.json({\"status\": \"200\"});\n        });\n};\n\nclientsController.deletePhones = async (req, res) => {\n    const { phone } = req.params;\n    const { id } = req.params;\n\n    await Clients.update(\n        {_id: id },\n        { $pull: {phones: {_id: phone} } },\n        { safe:true }\n    )\n        .then( ( response ) => {\n            console.log(response);\n        })\n        .catch( e => console.log(e))\n        .then( () => {\n            res.json({\"status\": \"200\"});\n        });\n        \n};\n\nclientsController.deleteClient = async (req, res) => {\n    const { id } = req.params;\n\n    await Clients.findByIdAndRemove(id)\n        .then( () => {\n            res.json({\"status\":\"200\"});\n        });\n};\n\nclientsController.getClient = async (req,res) => {\n    const { id } = req.params;\n\n    await Clients.findById(id)\n        .then( (response) => {\n            res.json(response);\n        }\n    );\n};\n\nclientsController.pushPaymentCard = async (req, res) => {\n    const payment_card = req.body;\n    const { id } = req.params;\n\n    await Clients.findById(id)\n        .then((client) => {\n            client.payment_cards.push(payment_card);\n            client.save();\n        }).catch(e => console.log(e))\n        .then(\n            res.json({ \"status\": \"200\" })\n        );\n};\n\nclientsController.editPaymentCard = async (req, res) => {\n    const { id } = req.params;\n    const { idcard } = req.params;\n\n    await Clients.findOneAndUpdate(\n        { \"_id\": id, \"payment_cards._id\": idcard },\n        { \"$set\": { \"payment_cards.$\": req.body } }\n    )\n        .then(doc => {\n            res.json({ \"status\": \"200\" });\n        })\n        .catch(e => {\n            console.log(e);\n        });\n};\n\nclientsController.deletePaymentCard = async (req, res) => {\n    const { idcard } = req.params;\n    const { id } = req.params;\n\n    await Clients.update(\n        { _id: id },\n        { $pull: { payment_cards: { _id: idcard } } },\n        { safe: true }\n    )\n        .then((response) => {\n            console.log(response);\n        })\n        .catch(e => console.log(e))\n        .then(() => {\n            res.json({ \"status\": \"200\" });\n        });\n};\n\n\nmodule.exports = clientsController;\n\n/** this ends this file\n* server/controllers/clients.controller\n**/\n"]}