{"version":3,"sources":["../../server/controllers/users.controller.js"],"names":["UsersController","User","require","getUsers","req","res","find","json","createUser","errors","array","length","status","body","name","email","password","findOne","err","data","user","save","error","send","Success","Login","success","message","editUsersimpleData","id","params","Usere","Users","findById","first_name","last_name","nick_name","tax_id","tax_type","tax_code","emails","addresses","phones","then","editEmailsData","findOneAndUpdate","_id","$set","catch","console","log","e","editAddressData","address","editPhonesData","phone","pushEmails","newEmails","push","pushAddresses","newAddresses","pushPhones","newPhones","deleteEmails","update","$pull","safe","deleteAddresses","deletePhones","response","deleteUser","findByIdAndRemove","getUser","pushPaymentCard","payment_card","payment_cards","editPaymentCard","idcard","deletePaymentCard","module","exports"],"mappings":"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","file":"users.controller.js","sourcesContent":["import { myValidationResult } from \"../utils/util\";\r\n\r\nconst UsersController = {};\r\nconst User = require(\"../models/users\");\r\n\r\nUsersController.getUsers = async (req, res) => {\r\n  const User = await User.find();\r\n\r\n  res.json(User);\r\n};\r\n\r\nUsersController.createUser = async (req, res) => {\r\n  try {\r\n    const errors = myValidationResult(req).array(); // Finds the validation errors in this request and wraps them in an object with handy functions\r\n    if (errors.length > 0) {\r\n      res.status(422).json({ errors: errors });\r\n      return;\r\n    }\r\n    const { name, email, password } = req.body;\r\n\r\n    User.findOne({ email }, function(err, data) {\r\n      if (err) {\r\n        res.status(422).json({ errors: err });\r\n        return;\r\n      }\r\n      if (!data) {\r\n        const user = new User({ name, email, password });\r\n\r\n        user.save(err => {\r\n          if (err) {\r\n            res.json({ error: err });\r\n          } else {\r\n            res.send({\r\n              Success: \"You are regestered,Please Confrim you email\"\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        res.send({ Success: \"Email is already used.\" });\r\n      }\r\n    });\r\n  } catch (err) {\r\n    res.json({ error: err });\r\n  }\r\n};\r\n\r\nUsersController.Login = async (req, res) => {\r\n  const errors = myValidationResult(req).array(); // Finds the validation errors in this request and wraps them in an object with handy functions\r\n  if (errors.length > 0) {\r\n    res.status(422).json({ errors: errors });\r\n    return;\r\n  }\r\n  const { email, password } = req.body;\r\n  User.findOne({ email }, function(err, data) {\r\n    if (err) {\r\n      res.status(422).json({ errors: res });\r\n      return;\r\n    }\r\n    if (data) {\r\n      if (data.password === password) {\r\n        //console.log(\"Done Login\");\r\n        //req.session.userId = data.unique_id;\r\n        //console.log(req.session.userId);\r\n        res.status(200).json({ success:true,message:\"Successfully login\", name: data.name, email: data.email });\r\n      } else {\r\n        res.status(400).json({success:false,message:\"login fail\"});\r\n      }\r\n    } else {\r\n      res.status(400).json({success:false,message:\"This Email Is not regestered!\"});\r\n    }\r\n  });\r\n};\r\n\r\nUsersController.editUsersimpleData = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  let Usere = await Users.findById(id);\r\n\r\n  Usere.first_name = req.body.first_name;\r\n  Usere.last_name = req.body.last_name;\r\n  Usere.nick_name = req.body.nick_name;\r\n  Usere.tax_id.tax_type = req.body.tax_id.tax_type;\r\n  Usere.tax_id.tax_code = req.body.tax_id.tax_code;\r\n  Usere.emails = Usere.emails;\r\n  Usere.addresses = Usere.addresses;\r\n  Usere.phones = Usere.phones;\r\n\r\n  await Usere.save().then(() => {\r\n    res.json({ status: \"200\" });\r\n  });\r\n};\r\n\r\nUsersController.editEmailsData = async (req, res) => {\r\n  /*\r\n        model for req: \r\n            {\r\n                \"verified\": false,\r\n                \"email\": \"correo@pedroruizhidalgo.es\"\r\n            }\r\n    */\r\n  const { id } = req.params;\r\n  const { email } = req.params;\r\n\r\n  await Users.findOneAndUpdate(\r\n    { _id: id, \"emails._id\": email },\r\n    {\r\n      $set: {\r\n        \"emails.$\": req.body\r\n      }\r\n    }\r\n  )\r\n    .then(doc => {\r\n      res.json({ status: \"200\" });\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nUsersController.editAddressData = async (req, res) => {\r\n  /*\r\n        model for req: \r\n        {\r\n            \"contact\": \"contact\", no required\r\n            \"street\": \"street\", required\r\n            \"city\": \"city\", required\r\n            \"province\": \"province\", required\r\n            \"zip\": \"zip\", required\r\n        }\r\n    */\r\n\r\n  const { id } = req.params;\r\n  const { address } = req.params;\r\n\r\n  await Users.findOneAndUpdate(\r\n    { _id: id, \"addresses._id\": address },\r\n    { $set: { \"addresses.$\": req.body } }\r\n  )\r\n    .then(doc => {\r\n      res.json({ status: \"200\" });\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nUsersController.editPhonesData = async (req, res) => {\r\n  /*\r\n        model for phones\r\n    {\r\n        phoneType: { type: String, required: false },\r\n        prefix: { type: String, required: false},\r\n        number: { type: String, required: true },\r\n        subfix: { type: String, requied: false},\r\n        memo: { type: String, required: false, description: \"use if you need other data\" },\r\n\r\n        required: false\r\n    }\r\n    */\r\n\r\n  const { id } = req.params;\r\n  const { phone } = req.params;\r\n\r\n  await Users.findOneAndUpdate(\r\n    { _id: id, \"phones._id\": phone },\r\n    { $set: { \"phones.$\": req.body } }\r\n  )\r\n    .then(doc => {\r\n      res.json({ status: \"200\" });\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nUsersController.pushEmails = async (req, res) => {\r\n  const newEmails = req.body;\r\n  const { id } = req.params;\r\n\r\n  await Users.findById(id)\r\n    .then(User => {\r\n      User.emails.push(newEmails);\r\n      User.save();\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    })\r\n    .then(res.json({ status: \"200\" }));\r\n};\r\n\r\nUsersController.pushAddresses = async (req, res) => {\r\n  const newAddresses = req.body;\r\n  const { id } = req.params;\r\n\r\n  await Users.findById(id)\r\n    .then(User => {\r\n      User.addresses.push(newAddresses);\r\n      User.save();\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(res.json({ status: \"200\" }));\r\n};\r\n\r\nUsersController.pushPhones = async (req, res) => {\r\n  const newPhones = req.body;\r\n  const { id } = req.params;\r\n\r\n  await Users.findById(id)\r\n    .then(User => {\r\n      User.phones.push(newPhones);\r\n      User.save();\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(res.json({ status: \"200\" }));\r\n};\r\n\r\nUsersController.deleteEmails = async (req, res) => {\r\n  const { email } = req.params;\r\n  const { id } = req.params;\r\n\r\n  await Users.update(\r\n    { _id: id },\r\n    { $pull: { emails: { _id: email } } },\r\n    { safe: true }\r\n  )\r\n    .then(User => {\r\n      console.log(User);\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(() => {\r\n      res.json({ status: \"200\" });\r\n    });\r\n};\r\n\r\nUsersController.deleteAddresses = async (req, res) => {\r\n  const { address } = req.params;\r\n  const { id } = req.params;\r\n\r\n  await Users.update(\r\n    { _id: id },\r\n    { $pull: { addresses: { _id: address } } },\r\n    { safe: true }\r\n  )\r\n    .then(response => {\r\n      console.log(User);\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(() => {\r\n      res.json({ status: \"200\" });\r\n    });\r\n};\r\n\r\nUsersController.deletePhones = async (req, res) => {\r\n  const { phone } = req.params;\r\n  const { id } = req.params;\r\n\r\n  await Users.update(\r\n    { _id: id },\r\n    { $pull: { phones: { _id: phone } } },\r\n    { safe: true }\r\n  )\r\n    .then(response => {\r\n      console.log(response);\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(() => {\r\n      res.json({ status: \"200\" });\r\n    });\r\n};\r\n\r\nUsersController.deleteUser = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  await Users.findByIdAndRemove(id).then(() => {\r\n    res.json({ status: \"200\" });\r\n  });\r\n};\r\n\r\nUsersController.getUser = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  await Users.findById(id).then(response => {\r\n    res.json(response);\r\n  });\r\n};\r\n\r\nUsersController.pushPaymentCard = async (req, res) => {\r\n  const payment_card = req.body;\r\n  const { id } = req.params;\r\n\r\n  await Users.findById(id)\r\n    .then(User => {\r\n      User.payment_cards.push(payment_card);\r\n      User.save();\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(res.json({ status: \"200\" }));\r\n};\r\n\r\nUsersController.editPaymentCard = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { idcard } = req.params;\r\n\r\n  await Users.findOneAndUpdate(\r\n    { _id: id, \"payment_cards._id\": idcard },\r\n    { $set: { \"payment_cards.$\": req.body } }\r\n  )\r\n    .then(doc => {\r\n      res.json({ status: \"200\" });\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nUsersController.deletePaymentCard = async (req, res) => {\r\n  const { idcard } = req.params;\r\n  const { id } = req.params;\r\n\r\n  await Users.update(\r\n    { _id: id },\r\n    { $pull: { payment_cards: { _id: idcard } } },\r\n    { safe: true }\r\n  )\r\n    .then(response => {\r\n      console.log(response);\r\n    })\r\n    .catch(e => console.log(e))\r\n    .then(() => {\r\n      res.json({ status: \"200\" });\r\n    });\r\n};\r\n\r\nmodule.exports = UsersController;\r\n\r\n/** this ends this file\r\n * server/controllers/Users.controller\r\n **/\r\n"]}